# Defines user and group credentials used by worker processes. If
# group is omitted, a group whose name equals that of user is used.
# Syntax: user user [group];
# Default: user nobody nobody;

user nginx;


# Defines the number of worker processes.
# Syntax: worker_processes number | auto;
# Default: worker_processes 1;

worker_processes auto;


# Defines a file that will store the process ID of the main process.
# Syntax: pid file;
# Default: pid logs/nginx.pid;

pid /var/run/nginx.pid;


events {

    # Sets the maximum number of simultaneous connections that can be
    # opened by a worker process.
    # Syntax: worker_connections number;
    # Default: worker_connections 512;
	
    worker_connections 1024;


    # If multi_accept is disabled, a worker process will accept one
    # new connection at a time. Otherwise, a worker process will
    # accept all new connections at a time.
    # Syntax: multi_accept on | off;
    # Default: multi_accept off;

    multi_accept on;


    # Specifies the connection processing method to use.
    # Syntax: use method;

    use epoll;
}


http {

    ##
    # Basic Settings
    ##


    # Enables or disables the use of sendfile().
    # Syntax: sendfile on | off;
    # Default: sendfile off;

    sendfile on;


    # Enables or disables the use of the TCP_NOPUSH socket option on
    # FreeBSD or the TCP_CORK socket option on Linux. The options are
    # enabled only when sendfile is used.
    # Syntax: tcp_nopush on | off;
    # Default: tcp_nopush off;

    tcp_nopush on;


    # The first parameter sets a timeout during which a keep-alive
    # client connection will stay open on the server side. The zero
    # value disables keep-alive client connections. The optional
    # second parameter sets a value in the “Keep-Alive: timeout=time”
    # response header field. Two parameters may differ.
    # Syntax:keepalive_timeout timeout [header_timeout];
    # Default: keepalive_timeout 75s;

    keepalive_timeout 10s;


    # Sets the maximum size of the types hash tables.
    # Refer to https://nginx.org/en/docs/hash.html
	# Syntax: types_hash_max_size size;
    # Default: types_hash_max_size 1024;

    types_hash_max_size 2048;


    # Defines a timeout for reading client request body.
    # The timeout is set only for a period between two successive
    # read operations, not for the transmission of the whole
    # request body.
	# Syntax: client_body_timeout time;
    # Default: client_body_timeout 60s;

    client_body_timeout 10s;


    # Defines a timeout for reading client request header.
	# Syntax: client_header_timeout time;
    # Default: client_header_timeout 60s;

    client_header_timeout 10s;


    # Sets the maximum allowed size of the client request body,
    # specified in the “Content-Length” request header field.
    # Syntax: client_max_body_size size;
    # Default: client_max_body_size 1m;

    client_max_body_size 16m;


    # Enables or disables resetting timed out connections and
    # connections closed with the non-standard code 444 (1.15.2).
    # Syntax: reset_timedout_connection on | off;
    # Default: reset_timedout_connection off;

    reset_timedout_connection on;


    # Sets a timeout for transmitting a response to the client.
    # The timeout is set only between two successive write
    # operations, not for the transmission of the whole response.
    # Syntax: send_timeout time;
    # Default: send_timeout 60s;

    send_timeout 10s;


    # Sets parameters for a shared memory zone that will keep states
    # for various keys.
    # Syntax: limit_conn_zone key zone=name:size;

    limit_conn_zone $binary_remote_addr zone=addr:8m;


    # Sets the shared memory zone and the maximum allowed number of
    # connections for a given key value.
    # Syntax: limit_conn zone number;

    limit_conn addr 64;


    # Enables or disables emitting nginx version on error pages and
    # in the “Server” response header field.
    # Syntax: server_tokens on | off | build | string;
    # Default: server_tokens on;

    server_tokens off;


    include /etc/nginx/mime.types;


    # Defines the default MIME type of a response.
    # Syntax: default_type mime-type;
    # Default: default_type text/plain;

    default_type application/octet-stream;


    # Configures a cache that can store:
    # open file descriptors, their sizes and modification times;
    # information on existence of directories;
    # file lookup errors, such as “file not found”,
    # “no read permission”, and so on.
    # Syntax: open_file_cache max=N [inactive=time];
    # Default: open_file_cache off;

    open_file_cache max=102400 inactive=20s;


    ##
    # SSL Settings
    ##


    # Enables the specified protocols.
    # Syntax: ssl_protocols [SSLv2] [SSLv3] [TLSv1] [TLSv1.1]
    #                       [TLSv1.2] [TLSv1.3];
    # Default: ssl_protocols TLSv1 TLSv1.1 TLSv1.2;

    ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3;


    # Specifies that server ciphers should be preferred over client
    # ciphers when using the SSLv3 and TLS protocols.
    # Syntax: ssl_prefer_server_ciphers on | off;
    # Default: ssl_prefer_server_ciphers off;

    ssl_prefer_server_ciphers on;


    # Specifies a file with DH parameters for DHE ciphers.
    # By default no parameters are set, and therefore DHE ciphers will
    # not be used.
	# Syntax: ssl_dhparam file;

    ssl_dhparam /etc/pki/tls/private/dhparam.pem;


    # Specifies the enabled ciphers. The ciphers are specified in
    # the format understood by the OpenSSL library.
    # Syntax: ssl_ciphers ciphers;
    # Default: ssl_ciphers HIGH:!aNULL:!MD5;

    ssl_ciphers "CHACHA20:EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH";


    # Specifies a curve for ECDHE ciphers.
    # Syntax: ssl_ecdh_curve curve;
    # Default: ssl_ecdh_curve auto;

    ssl_ecdh_curve secp384r1;


    # Specifies a time during which a client may reuse the session
    # parameters.
    # Syntax: ssl_session_timeout time;
    # Default: ssl_session_timeout 5m;

    ssl_session_timeout 10m;


    # Sets the types and sizes of caches that store session
    # parameters.
    # Syntax: ssl_session_cache off | none |
    #                           [builtin[:size]] [shared:name:size];
    # Default: ssl_session_cache none;

    ssl_session_cache shared:SSL:8m;


    # Enables or disables session resumption through TLS session
    # tickets.
    # Refer to https://tools.ietf.org/html/rfc5077
    # Syntax: ssl_session_tickets on | off;
    # Default: ssl_session_tickets on;

    ssl_session_tickets off;


    # Enables or disables stapling of OCSP responses by the server.
    # Refer to https://tools.ietf.org/html/rfc6066#section-8
    # Syntax: ssl_stapling on | off;
    # Default: ssl_stapling off;

    ssl_stapling on;


    # Enables or disables verification of OCSP responses by the
    # server.
    # Syntax: ssl_stapling_verify on | off;
    # Default: ssl_stapling_verify off;

    ssl_stapling_verify on;


    # Configures name servers used to resolve names of upstream
    # servers into addresses.
    # Syntax: resolver address ... [valid=time] [ipv6=on|off];

    resolver 1.1.1.1 valid=300s;


    # Sets a timeout for name resolution.
    # Syntax: resolver_timeout time;
    # Default: resolver_timeout 30s;

    resolver_timeout 5s;


    ##
    # Logging Settings
    ##


    # Specifies log format.
    # Syntax: log_format name [escape=default|json|none] string ...;
    # Default: log_format combined "...";

    log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
                      '$status $body_bytes_sent "$http_referer" '
                      '"$http_user_agent" "$http_x_forwarded_for"';


    # Sets the path, format, and configuration for a buffered log
    # write. Several logs can be specified on the same level.
    # Logging to syslog can be configured by specifying the “syslog:”
    # prefix in the first parameter.
    # Syntax: access_log path [format [buffer=size] [gzip[=level]]
    #                         [flush=time] [if=condition]];
    #         access_log off;
    # Default: access_log logs/access.log combined;

    access_log /var/log/nginx/access.log main;


    # Configures logging. Several logs can be specified on the same
    # level (1.5.2). If on the main configuration level writing a
    # log to a file is not explicitly defined, the default file will
    # be used.
    # Syntax: error_log file [level];
    # Default: error_log logs/error.log error;

    error_log /var/log/nginx/error.log warn;


    ##
    # Gzip Settings
    ##


    # Enables or disables gzipping of responses.
    # Syntax: gzip on | off;
    # Default: gzip off;

    gzip on;


    # Sets a gzip compression level of a response.
    # Acceptable values are in the range from 1 to 9.
    # Syntax: gzip_comp_level level;
    # Default: gzip_comp_level 1;

    gzip_comp_level 6;


    # Disables gzipping of responses for requests with “User-Agent”
    # header fields matching any of the specified regular
    # expressions.
    # The special mask “msie6” (0.7.12) corresponds to the regular
    # expression “MSIE [4-6]\.”, but works faster.
    # Syntax: gzip_disable regex ...;

    gzip_disable "msie6";


    # Sets the minimum length of a response that will be gzipped.
    # The length is determined only from the “Content-Length”
    # response header field.
    # Syntax: gzip_min_length length;
    # Default: gzip_min_length 20;

    gzip_min_length 128;


    # Enables or disables gzipping of responses for proxied requests
    # depending on the request and response.
    # Syntax: gzip_proxied off | expired | no-cache | no-store |
    #                      private | no_last_modified | no_etag |
    #                      auth | any ...;
    # Default: gzip_proxied off;

    gzip_proxied any;


    # Enables gzipping of responses for the specified MIME types in
    # addition to “text/html”.
    # Syntax: gzip_types mime-type ...;
    # Default: gzip_types text/html;

    gzip_types 'application/javascript '
               'application/rss+xml '
               'application/vnd.ms-fontobject '
               'application/x-font '
               'application/x-font-opentype '
               'application/x-font-otf '
               'application/x-font-truetype '
               'application/x-font-ttf '
               'application/x-javascript '
               'application/xhtml+xml '
               'application/xml '
               'font/opentype '
               'font/otf '
               'font/ttf '
               'image/svg+xml '
               'image/x-icon '
               'text/css '
               'text/javascript '
               'text/plain '
               'text/xml';


    # Enables or disables inserting the “Vary: Accept-Encoding”
    # response header field if the directives gzip, gzip_static, or
    # gunzip are active.
    # Syntax: gzip_vary on | off;
    # Default: gzip_vary off;

    gzip_vary on;


    ##
    # Virtual Host Configs
    ##

    include /etc/nginx/conf.d/*.conf;
    include /etc/nginx/sites-enabled/*;
}
